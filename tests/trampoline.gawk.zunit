#!/usr/bin/env zunit

@setup {
  load '../trampoline.plugin.zsh'
  mkdir -p '/tmp/zt_test_dir_1/nested_1'
  mkdir -p '/tmp/zt_test_dir_1/nested_2'
  mkdir -p '/tmp/zt_test_dir_2'
  touch    '/tmp/zt_test_dir_2/zt_test_file.txt'
  mkdir -p '/tmp/zt_test_dir_3/nested_1'
}

@teardown {
  rm -rf '/tmp/zt_test_dir_*'
  rm '/tmp/zt_test_dir_2/zt_test_file.txt'
}

@test 'get_metadata_value_string returns string given string containing a colon' {
  local output="$(echo 'decorator:*' | \
      gawk -i trampoline.gawk '{ print zt::get_metadata_value_string($0) }')"
  assert $output same_as '*'
}

@test 'get_metadata_value_boolean returns true given string' {
  local output="$(echo 'expand' | \
      gawk -i trampoline.gawk '{ print zt::get_metadata_value_boolean($0) }')"
  assert $output same_as 'true'
}

@test 'get_metadata_value_boolean returns false given empty string' {
  local output="$(echo '' | \
      gawk -i trampoline.gawk '{ print zt::get_metadata_value_boolean($0) }')"
  assert $output same_as 'false'
}

@test 'get_metadata_value returns string given decorator' {
  local output="$(echo 'decorator:*' | \
      gawk -i trampoline.gawk '{ print zt::get_metadata_value($0, "decorator") }')"
  assert $output same_as '*'
}

@test 'get_metadata_value returns decorator default given no decorator' {
  local output="$(echo '' | \
      gawk -i trampoline.gawk '{ print zt::get_metadata_value($0, "decorator") }')"
  assert $output same_as ' '
}

@test 'get_metadata_value returns decorator default given string longer than one character' {
  local output="$(echo 'decorator:long' | \
      gawk -i trampoline.gawk '{ print zt::get_metadata_value($0, "decorator") }')"
  assert $output same_as ' '
}

@test 'get_metadata_value returns true given boolean metadata item' {
  local output="$(echo 'expand' | \
      gawk -i trampoline.gawk '{ print zt::get_metadata_value($0, "expand") }')"
  assert $output same_as 'true'
}

@test 'get_metadata_value returns false given no boolean metadata item' {
  local output="$(echo '' | \
      gawk -i trampoline.gawk '{ print zt::get_metadata_value($0, "expand") }')"
  assert $output same_as 'false'
}

@test 'pretty_print lists directories' {
  run gawk -i trampoline.gawk '{ printf zt::pretty_print($0, 18) }' \
      tests/_support/directories_simple.csv
  local output_lines="$(echo $output | sed -n '$=')"
  local directories="$(sed -n '$=' tests/_support/directories_simple.csv)"
  assert $output_lines equals $directories
}

@test 'pretty_print lists expanded directories' {
  run gawk -i trampoline.gawk '{ printf zt::pretty_print($0, 18) }' \
      tests/_support/directories_expand.csv
  local output_lines="$(printf $output | sed -n '$=')"
  local directories="$(sed -n '$=' tests/_support/directories_expand.csv)"
  local expanded_directories_expected=3
  assert $output_lines equals $(($directories + $expanded_directories_expected))
}
